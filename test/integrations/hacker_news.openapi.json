{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "Hacker News"
  },
  "host": "hacker-news.firebaseio.com",
  "basePath": "/v0",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{storyType}stories.json": {
      "get": {
        "summary": "Get an up-to-date list of stories for the given type",
        "operationId": "getStories",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "storyType",
            "description": "The type of stories to retrieve\n",
            "type": "string",
            "default": "show",
            "enum": [
              "top",
              "new",
              "job",
              "show",
              "ask"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "type": "integer"
              }
            },
            "examples": {
              "application/json": [
                2348234,
                8276,
                20823448
              ]
            },
            "x-lucy/view": "<h1 class=\"text-uppercase\">\n  {{ answers.storyType }} Stories - Hacker News\n</h1>\n<hr>\n<lucy for=\"story\" in=\"result\">\n  <!-- story is just the itemID, so we need to execute another request -->\n  <lucy if=\"index < 5\">\n    <lucy include=\"Item\" action=\"getItem\" inputvars=\"{itemID: story}\">\n    </lucy>\n    <hr>\n  </lucy>\n</lucy>"
          }
        }
      }
    },
    "/item/{itemID}.json": {
      "get": {
        "summary": "Get details for a given item",
        "operationId": "getItem",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "itemID",
            "default": 8863,
            "description": "The ID of the item to retrieve",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Item"
            },
            "examples": {
               "application/json": {
                  "by": "dhouston",
                  "descendants": 71,
                  "id": 8863,
                  "score": 111,
                  "time": 1175714200,
                  "title": "My YC app: Dropbox - Throw away your USB drive",
                  "type": "story",
                  "url": "http://www.getdropbox.com/u/2/screencast.html",
                  "kids": [
                    8952,
                    9224,
                    8917,
                    8876
                  ]
                }
            },
            "x-lucy/view": "<h1 class=\"text-capitalize\">{{ result.type }}</h1>\n<hr>\n<lucy include=\"Item\">"
          }
        }
      }
    },
    "/user/{username}.json": {
      "get": {
        "summary": "Get details for a given user",
        "operationId": "getUser",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "username",
            "default": "norvig",
            "description": "The unique username for this user",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation\n",
            "examples": {
               "application/json": {
                  "about": "http://norvig.com",
                  "created": 1190398535,
                  "delay": 0,
                  "id": "norvig",
                  "karma": 639,
                  "submitted": [
                    10330390,
                    10330387,
                    10328571
                  ]
               }
            },
            "schema": {
              "$ref": "#/definitions/User"
            },
            "x-lucy/view": "<lucy include=\"User\">"
          }
        }
      }
    }
  },
  "definitions": {
    "Item": {
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "title": {
          "type": "string"
        },
        "deleted": {
          "type": "boolean"
        },
        "by": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "text": {
          "type": "string"
        },
        "dead": {
          "type": "boolean"
        },
        "parent": {
          "type": "integer"
        },
        "kids": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "url": {
          "type": "string"
        },
        "score": {
          "type": "integer"
        },
        "parts": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        },
        "descendants": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      },
      "x-lucy/view": "<h2>\n  <lucy if=\"!result.url\">{{ result.title }}</lucy>\n  <lucy if=\"result.url\">\n    <a href=\"{{ result.url }}\" target=\"_blank\">\n      {{ result.title }}\n    </a>\n  </lucy>\n</h2>\n<p>\n  By {{ result.by }} - {{ result.score }} points\n</p>\n<!-- should be embeddable html -->\n<p class=\"small\">{{ result.text }}</p>"
    },
    "User": {
      "x-lucy/view": "<h1>{{ result.id }} ({{ result.karma }})</h1>\n<!-- Undocumented use of 'length' -->\n<p class=\"small\">{{ result.submitted.length }} Submissions</p>\n<!-- Find a way to embed as HTML -->\n<p>{{ result.about }}</p>",
      "properties": {
        "id": {
          "type": "string"
        },
        "created": {
          "type": "integer"
        },
        "delay": {
          "type": "integer"
        },
        "karma": {
          "type": "integer"
        },
        "about": {
          "type": "string"
        },
        "submitted": {
          "type": "array",
          "items": {
            "type": "integer"
          }
        }
      }
    }
  }
}
